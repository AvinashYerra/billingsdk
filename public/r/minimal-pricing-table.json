{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "minimal-pricing-table",
  "type": "registry:block",
  "title": "Minimal Pricing Table",
  "description": "A minimal pricing table component",
  "dependencies": [
    "lucide-react"
  ],
  "registryDependencies": [
    "button",
    "card",
    "badge",
    "switch",
    "utils"
  ],
  "files": [
    {
      "path": "src/registry/billingsdk/minimal-pricing-table.tsx",
      "content": "'use client'\n\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardHeader } from \"@/components/ui/card\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Switch } from \"@/components/ui/switch\"\nimport { Check, Info } from \"lucide-react\"\nimport { cn } from \"@/lib/utils\"\n\nexport interface Plan {\n  id: string\n  title: string\n  description: string\n  price: string\n  badge?: string\n  features: {\n    name: string\n    icon: React.ReactNode\n    iconColor?: string\n    included: boolean\n    price?: string\n    toggleable?: boolean\n    defaultChecked?: boolean\n  }[]\n  highlight?: string\n  benefits: string[]\n  buttonText: string\n  buttonVariant?: 'default' | 'secondary' | 'outline'\n}\n\ninterface PricingTableProps {\n  className?: string\n  plans: Plan[]\n  onFeatureToggle?: (planId: string, feature: string, enabled: boolean) => void\n  onPlanSelect?: (planId: string) => void\n  showFooter?: boolean\n  footerTitle?: string\n  footerSubtitle?: string\n  footerButtonText?: string\n  onFooterButtonClick?: () => void\n}\n\nexport function MinimalPricingTable({ className, plans, onFeatureToggle, onPlanSelect, showFooter, footerTitle, footerSubtitle, footerButtonText, onFooterButtonClick }: PricingTableProps) {\n  return (\n    <div className={cn(\"mt-10 max-w-7xl mx-auto\", className)}>\n      <div className={cn(\n        \"grid\",\n        plans.length === 1 && \"grid-cols-1 max-w-md mx-auto\",\n        plans.length === 2 && \"grid-cols-1 md:grid-cols-2 max-w-4xl mx-auto\",\n        plans.length === 3 && \"grid-cols-1 md:grid-cols-3\",\n        plans.length === 4 && \"grid-cols-1 md:grid-cols-2 lg:grid-cols-4\",\n        plans.length >= 5 && \"grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4\"\n      )}>\n        {plans.map((plan) => (\n          <Card key={plan.id} className={cn(\n            \"border-none text-card-foreground flex flex-col rounded-none relative transition-all duration-200\",\n            plan.highlight === 'pro' \n              ? \"bg-muted/30 -mt-8 shadow-lg z-10 border-t rounded-md border-border\" \n              : \"bg-card\"\n          )}>\n            {plan.badge && (\n              <Badge className=\"absolute -top-3 left-1/2 transform -translate-x-1/2 bg-secondary text-secondary-foreground px-3 py-1 text-xs\">\n                {plan.badge}\n              </Badge>\n            )}\n            <CardHeader className=\"pb-4\">\n              <div className=\"space-y-2\">\n                <h3 className=\"text-xl font-semibold text-left\">{plan.title}</h3>\n                <p className=\"text-sm w-2/3 text-left text-muted-foreground\">{plan.description}</p>\n              </div>\n              <div className=\"space-y-1\">\n                <div className=\"text-4xl font-bold text-left\">{plan.price}</div>\n              </div>\n            </CardHeader>\n            <CardContent className=\"space-y-6 flex-1 flex flex-col\">\n              <div className=\"space-y-4 flex-1\">\n                {plan.features.map((feature, index) => (\n                  <div key={index} className=\"flex items-center gap-3\">\n                    {feature.included ? (\n                      <div className=\"w-2 h-2 bg-primary rounded-sm\"></div>\n                    ) : (\n                      <div className={cn(\"w-4 h-4\", feature.iconColor || \"text-muted-foreground\")}>\n                        {feature.icon}\n                      </div>\n                    )}\n                    <span className=\"text-sm\">{feature.name}</span>\n                    {feature.included ? (\n                      <span className=\"ml-auto text-sm text-muted-foreground\">Included</span>\n                    ) : (\n                      <>\n                        <span className=\"ml-auto text-sm text-muted-foreground\">\n                          {feature.price || 'Custom'}\n                        </span>\n                        {feature.toggleable && (\n                          <Switch \n                            className=\"ml-2\" \n                            defaultChecked={feature.defaultChecked}\n                            onCheckedChange={(checked) => \n                              onFeatureToggle?.(plan.id, feature.name, checked)\n                            }\n                          />\n                        )}\n                      </>\n                    )}\n                  </div>\n                ))}\n              </div>\n\n              <Button \n                className={cn(\n                  \"w-full mt-auto\",\n                  plan.highlight === 'pro' \n                    ? \"bg-primary hover:bg-primary/90 text-primary-foreground\" \n                    : \"bg-secondary hover:bg-secondary/80 text-secondary-foreground\"\n                )}\n                variant={plan.buttonVariant}\n                onClick={() => onPlanSelect?.(plan.id)}\n              >\n                {plan.buttonText}\n              </Button>\n\n              <div className=\"space-y-3 pt-4 border-t border-border\">\n                {plan.benefits.map((benefit, index) => (\n                  <div key={index} className=\"flex items-center gap-2\">\n                    <Check className=\"w-4 h-4 text-primary\" />\n                    <span className=\"text-sm text-muted-foreground\">{benefit}</span>\n                    {index < 2 && <Info className=\"w-4 h-4 text-muted-foreground\" />}\n                  </div>\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n\n      {/* Footer Section */}\n      {showFooter !== false && (\n        <div className={cn(\n          \"flex items-center justify-between bg-muted/50 p-6 border-t border-border\",\n          plans.length === 1 && \"max-w-md mx-auto\",\n          plans.length === 2 && \"max-w-4xl mx-auto\"\n        )}>\n          <div>\n            <p className=\"text-lg font-medium text-card-foreground text-left\">{footerTitle || \"Pre-negotiated discounts are available to\"}</p>\n            <p className=\"text-lg font-medium text-card-foreground text-left\">{footerSubtitle || \"early-stage startups and nonprofits.\"}</p>\n          </div>\n          <Button \n            className=\"bg-secondary hover:bg-secondary/80 text-secondary-foreground px-6\"\n            onClick={onFooterButtonClick}\n          >\n            {footerButtonText || \"Apply now\"}\n          </Button>\n        </div>\n      )}\n    </div>\n  )\n}\n",
      "type": "registry:component",
      "target": "components/billingsdk/minimal-pricing-table.tsx"
    },
    {
      "path": "src/registry/billingsdk/demo/minimal-pricing-table-demo.tsx",
      "content": "'use client'\n\nimport { MinimalPricingTable, Plan } from '@/components/billingsdk/minimal-pricing-table';\nimport { Square, Bell, Type, Database } from 'lucide-react';\n\nexport default function MinimalPricingTableDemo({ className }: { className?: string }) {\n    const plans: Plan[] = [\n        {\n            id: 'starter',\n            title: 'Starter',\n            description: 'For developers testing out Liveblocks locally.',\n            price: 'Free',\n            features: [\n                {\n                    name: 'Presence',\n                    icon: <div className=\"w-2 h-2 bg-green-500 rounded-sm\"></div>,\n                    included: true\n                },\n                {\n                    name: 'Comments',\n                    icon: <Square className=\"w-4 h-4 text-orange-500\" />,\n                    included: false\n                },\n                {\n                    name: 'Notifications',\n                    icon: <Bell className=\"w-4 h-4 text-teal-500\" />,\n                    included: false\n                },\n                {\n                    name: 'Text Editor',\n                    icon: <Type className=\"w-4 h-4 text-blue-500\" />,\n                    included: false\n                },\n                {\n                    name: 'Sync Datastore',\n                    icon: <Database className=\"w-4 h-4 text-zinc-500\" />,\n                    included: false\n                }\n            ],\n            benefits: ['WebSocket infrastructure', 'Pre-built components', 'Community support'],\n            buttonText: 'Start today for free'\n        },\n        {\n            id: 'pro',\n            title: 'Pro',\n            description: 'For companies adding collaboration in production.',\n            price: '$720/month',\n            badge: 'Most popular',\n            highlight: 'pro',\n            features: [\n                {\n                    name: 'Presence',\n                    icon: <div className=\"w-2 h-2 bg-green-500 rounded-sm\"></div>,\n                    included: true\n                },\n                {\n                    name: 'Comments',\n                    icon: <Square className=\"w-4 h-4 text-orange-500\" />,\n                    included: false,\n                    price: '$360/mo',\n                    toggleable: true\n                },\n                {\n                    name: 'Notifications',\n                    icon: <Bell className=\"w-4 h-4 text-teal-500\" />,\n                    included: false,\n                    price: '$180/mo',\n                    toggleable: true,\n                    defaultChecked: true\n                },\n                {\n                    name: 'Text Editor',\n                    icon: <Type className=\"w-4 h-4 text-blue-500\" />,\n                    included: false,\n                    price: '$480/mo',\n                    toggleable: true,\n                    defaultChecked: true\n                },\n                {\n                    name: 'Sync Datastore',\n                    icon: <Database className=\"w-4 h-4 text-zinc-500\" />,\n                    included: false,\n                    price: '$480/mo',\n                    toggleable: true,\n                    defaultChecked: true\n                }\n            ],\n            benefits: ['WebSocket infrastructure', 'Pre-built components', 'Email support'],\n            buttonText: 'Sign up'\n        },\n        {\n            id: 'enterprise',\n            title: 'Enterprise',\n            description: 'For organizations that need more support and compliance features.',\n            price: 'Custom',\n            features: [\n                {\n                    name: 'Presence',\n                    icon: <div className=\"w-2 h-2 bg-green-500 rounded-sm\"></div>,\n                    included: true\n                },\n                {\n                    name: 'Comments',\n                    icon: <Square className=\"w-4 h-4 text-orange-500\" />,\n                    included: false,\n                    price: 'Custom'\n                },\n                {\n                    name: 'Notifications',\n                    icon: <Bell className=\"w-4 h-4 text-teal-500\" />,\n                    included: false,\n                    price: 'Custom'\n                },\n                {\n                    name: 'Text Editor',\n                    icon: <Type className=\"w-4 h-4 text-blue-500\" />,\n                    included: false,\n                    price: 'Custom'\n                },\n                {\n                    name: 'Sync Datastore',\n                    icon: <Database className=\"w-4 h-4 text-zinc-500\" />,\n                    included: false,\n                    price: 'Custom'\n                }\n            ],\n            benefits: ['WebSocket infrastructure', 'Pre-built components', 'Premium support'],\n            buttonText: 'Contact us'\n        }\n    ];\n\n    const handleFeatureToggle = (planId: string, feature: string, enabled: boolean) => {\n        console.log(`Plan: ${planId}, Feature: ${feature}, Enabled: ${enabled}`);\n    };\n\n    const handlePlanSelect = (planId: string) => {\n        console.log(`Selected plan: ${planId}`);\n    };\n\n    const handleFooterButtonClick = () => {\n        console.log('Footer button clicked');\n    };\n\n    return (\n        <MinimalPricingTable\n            className={className}\n            plans={plans}\n            onFeatureToggle={handleFeatureToggle}\n            onPlanSelect={handlePlanSelect}\n            showFooter={true}\n            footerTitle=\"Pre-negotiated discounts are available to\"\n            footerSubtitle=\"early-stage startups and nonprofits.\"\n            footerButtonText=\"Apply now\"\n            onFooterButtonClick={handleFooterButtonClick}\n        />\n    );\n}\n",
      "type": "registry:component",
      "target": "components/minimal-pricing-table-demo.tsx"
    }
  ]
}