{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "banner",
  "type": "registry:block",
  "title": "Top Banner",
  "description": "A banner component",
  "dependencies": [
    "lucide-react",
    "motion"
  ],
  "registryDependencies": [
    "button",
    "utils"
  ],
  "files": [
    {
      "path": "src/registry/billingsdk/banner.tsx",
      "content": "\"use client\"\n\nimport type React from \"react\"\n\nimport { Button } from \"@/components/ui/button\"\nimport { cn } from \"@/lib/utils\"\nimport { X } from \"lucide-react\"\nimport { useState, useEffect } from \"react\"\nimport { motion, AnimatePresence } from \"motion/react\"\n\ninterface BannerProps {\n  variant?: \"default\" | \"minimal\" | \"popup\"\n  title: string\n  description?: string\n  buttonText?: string\n  buttonIcon?: React.ReactNode\n  buttonLink?: string\n  className?: string\n  autoDismiss?: number // in ms\n  onDismiss?: () => void\n}\n\nexport function Banner({\n  variant = \"default\",\n  title,\n  description,\n  buttonText,\n  buttonIcon,\n  buttonLink,\n  className,\n  autoDismiss,\n  onDismiss,\n}: BannerProps) {\n  const [isVisible, setIsVisible] = useState(true)\n\n  useEffect(() => {\n    if (isVisible && autoDismiss) {\n      const timer = setTimeout(() => handleDismiss(), autoDismiss)\n      return () => clearTimeout(timer)\n    }\n  }, [isVisible, autoDismiss])\n\n  const handleDismiss = () => {\n    setIsVisible(false)\n    onDismiss?.()\n  }\n\n  const getVariantStyles = () => {\n    switch (variant) {\n      case \"minimal\":\n        return {\n          container:\n            \"sticky top-0 z-50 w-full border-b bg-card/95 backdrop-blur supports-[backdrop-filter]:bg-card/60\",\n          wrapper:\n            \"relative container mx-auto flex flex-col sm:flex-row items-start sm:items-center justify-between px-3 sm:px-4 py-2 gap-2 sm:gap-4 max-w-2xl\",\n          content: \"flex flex-col sm:flex-row items-start sm:items-center gap-1 sm:gap-2 w-full\",\n          title: \"text-sm font-medium text-card-foreground leading-tight\",\n          description: \"text-xs text-muted-foreground sm:ml-2\",\n          actions: \"flex items-center gap-2 self-end sm:self-auto pr-8\",\n        }\n      case \"popup\":\n        return {\n          container:\n            \"fixed top-4 left-1/2 -translate-x-1/2 z-50 max-w-sm sm:max-w-md w-[90%] sm:w-auto bg-popover border border-border rounded-lg shadow-lg\",\n          wrapper:\n            \"relative flex flex-col sm:flex-row items-start sm:items-center justify-between px-3 sm:px-4 py-3 gap-3 sm:gap-4\",\n          content: \"flex flex-col sm:flex-row items-start sm:items-center gap-2 flex-1\",\n          title: \"text-sm font-medium text-popover-foreground leading-snug\",\n          description: \"text-xs text-muted-foreground\",\n          actions: \"flex items-center gap-2 self-end sm:self-auto flex-shrink-0 pr-8\",\n        }\n      default:\n        return {\n          container:\n            \"sticky top-0 z-50 w-full border-b bg-primary text-primary-foreground shadow-sm text-left\",\n          wrapper:\n            \"relative container mx-auto flex flex-col sm:flex-row items-start sm:items-center justify-between px-3 sm:px-4 py-2 sm:py-3 gap-2 sm:gap-4\",\n          content: \"flex flex-col sm:flex-row items-start sm:items-center gap-2 w-full\",\n          title: \"text-sm font-medium text-primary-foreground leading-tight\",\n          description: \"text-xs text-primary-foreground/80\",\n          actions: \"flex items-center gap-2 self-end sm:self-auto pr-8\",\n        }\n    }\n  }\n\n  const styles = getVariantStyles()\n\n  const getAnimationProps = () => {\n    switch (variant) {\n      case \"popup\":\n        return {\n          initial: { opacity: 0, scale: 0.95, y: -20 },\n          animate: { opacity: 1, scale: 1, y: 0 },\n          exit: { opacity: 0, scale: 0.95, y: -20 },\n        }\n      default:\n        return {\n          initial: { opacity: 0, y: -12 },\n          animate: { opacity: 1, y: 0 },\n          exit: { opacity: 0, y: -12 },\n        }\n    }\n  }\n\n  return (\n    <AnimatePresence>\n      {isVisible && (\n        <motion.div\n          {...getAnimationProps()}\n          transition={{ duration: 0.25 }}\n          className={cn(styles.container, className)}\n        >\n          <div className={styles.wrapper}>\n            {/* Content */}\n            <div className={styles.content}>\n              <div className={variant === \"minimal\" ? \"flex flex-row gap-2\" : \"\"}>\n                <p className={styles.title}>{title}</p>\n                {description && <p className={styles.description}>{description}</p>}\n              </div>\n            </div>\n\n            {/* Actions */}\n            <div className={styles.actions}>\n              {buttonText && variant !== \"minimal\" && (\n                <Button\n                  variant={variant === \"default\" ? \"secondary\" : \"default\"}\n                  size=\"sm\"\n                  onClick={() => window.open(buttonLink, \"_blank\")}\n                  className={\"h-8\"}\n                >\n                  {buttonIcon && <div className=\"flex-shrink-0 mr-1\">{buttonIcon}</div>}\n                  {buttonText}\n                </Button>\n              )}\n            </div>\n\n            {/* Close button (always top-right) */}\n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              onClick={handleDismiss}\n              className={cn(\n                \"absolute right-2 top-1/2 -translate-y-1/2 h-8 w-8\",\n                variant === \"default\" && \"hover:bg-primary-foreground/20 text-primary-foreground\",\n                variant === \"popup\" && \"hover:bg-accent text-popover-foreground\",\n                variant === \"minimal\" && \"hover:bg-accent text-card-foreground\",\n              )}\n            >\n              <X className=\"h-4 w-4\" />\n              <span className=\"sr-only\">Dismiss</span>\n            </Button>\n          </div>\n        </motion.div>\n      )}\n    </AnimatePresence>\n  )\n}\n",
      "type": "registry:component",
      "target": "components/billingsdk/banner.tsx"
    },
    {
      "path": "src/registry/billingsdk/demo/banner-demo.tsx",
      "content": "import { Banner } from \"@/components/billingsdk/banner\"\nimport { Rocket } from \"lucide-react\"\n\nexport default function FreeTrialBannerDemo() {\n    return (\n        <div className=\"w-full h-full flex flex-col gap-4 min-h-[500px] justify-center items-center border rounded-lg\">\n            <Banner\n                title=\"ðŸŽ‰ Start your free trial today!\"\n                description=\"Get 30 days free access to all premium features\"\n                buttonText=\"Start Free Trial\"\n                buttonIcon={<Rocket />}\n                buttonLink=\"https://example.com/signup\"\n                variant=\"default\" // default, minimal, popup\n            />\n        </div>\n\n    )\n}\n",
      "type": "registry:component",
      "target": "components/banner-demo.tsx"
    }
  ]
}